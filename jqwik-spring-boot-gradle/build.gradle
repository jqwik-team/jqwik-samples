plugins {
	id 'org.springframework.boot' version '3.1.5' // At least 2.7. for Gradle 8 support
	id 'io.spring.dependency-management' version '1.1.4'
	id 'java'
}

ext {
	junitPlatformVersion = '1.10.1'
	junitJupiterVersion = '5.10.1'
	jqwikSpringVersion = '0.11.0'
	assertJVersion = '3.24.2'
	mockitoVersion = '4.11.0'
}

ext['mockito.version'] = "${mockitoVersion}"
ext['assertj.version'] = "${assertJVersion}"
ext['junit-jupiter.version'] = "${junitJupiterVersion}"

group = 'my.example'
version = '0.0.1-SNAPSHOT'

repositories {
	mavenCentral()
	maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
}

java {
	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

compileTestJava {
	options.compilerArgs += '-parameters'
	options.encoding = 'UTF-8'
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'

	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}

	testImplementation("org.junit.jupiter:junit-jupiter:${junitJupiterVersion}")
	testRuntimeOnly("org.junit.platform:junit-platform-launcher:${junitPlatformVersion}")
	testImplementation("net.jqwik:jqwik-spring:${jqwikSpringVersion}")

	// Only add if you want a different jqwik version than what's included with jqwik-spring:
	// testImplementation("net.jqwik:jqwik:1.8.2")

	// Optional but recommended to get annotation related API warnings, e.g. for @CheckReturnValue
	compileOnly('org.jetbrains:annotations:24.0.1')

}

test {
	useJUnitPlatform()

	include '**/*Properties.class'
	include '**/*Test.class'
	include '**/*Tests.class'

	// testLogging.showStandardStreams = true
}

wrapper {
	gradleVersion = '8.7'
}
